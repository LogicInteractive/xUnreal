package lib.loader;

/**
 * ...
 * @author Tommy Svensson
 */

class FileCache
{
	/////////////////////////////////////////////////////////////////////////////////////
	
	public function new() {}	
	
	/////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////
}

#if heaps

class ImageCache
{
	/////////////////////////////////////////////////////////////////////////////////////
	
	//===================================================================================
	// Consts 
	//-----------------------------------------------------------------------------------

	//===================================================================================
	// Properties 
	//-----------------------------------------------------------------------------------
	
	// var images				: Map<String,Tile>		= new Map<String, Tile>();
	
	//===================================================================================
	// Declarations 
	//-----------------------------------------------------------------------------------

	//===================================================================================
	// Callback 
	//-----------------------------------------------------------------------------------		

	//===================================================================================
	// Variables 
	//-----------------------------------------------------------------------------------		

	/////////////////////////////////////////////////////////////////////////////////////
	
	public function new() 
	{
	}	
	
	/////////////////////////////////////////////////////////////////////////////////////
	
	// public function add(src:String, image:Tile):Tile
	// {
	// 	images.set(src, image);
	// 	return image;
	// }
	
	// public function get(src:String):Tile
	// {
	// 	if (src == null)
	// 		return null;
			
	// 	return images.get(src);
	// }
	
	// public function has(src:String):Bool
	// {
	// 	if (src == null)
	// 		return false;
			
	// 	return images.exists(src);
	// }
	
	public function list():Array<String>
	{
		var ol:Array<String> = [];
		for (img in images.keys())
		{
			ol.push(img);
		}
		return ol;
	}
	
	/////////////////////////////////////////////////////////////////////////////////////

	public function enableMipmapForAll()
	{
		// for (imgName in images.keys())
			// stage.utils.ImageUtils.enableMipmap(images.get(imgName));
	}



	/////////////////////////////////////////////////////////////////////////////////////
}

#end
