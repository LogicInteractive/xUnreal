#include "{className}.h"

{$disclaimer}

void {$prefix}{className}::NativeConstruct()
{
	Super::NativeConstruct();

    if (hxInst)
        {$hxMainClass}_releaseHaxeObject(hxInst); 

	if (!hxInst)
    {
        hxInst = {$hxMainClass}_{className}_new();
        {$hxMainClass}_unreal_UWidget_setOwner(hxInst, this);
    }

    if (hxInst)
        {$hxMainClass}_unreal_UserWidget_NativeConstruct(hxInst);
}

void {$prefix}{className}::NativeOnInitialized()
{
	Super::NativeOnInitialized();

    if (hxInst)
    {
        {$hxMainClass}_unreal_UserWidget_NativeOnInitialized(hxInst);
    }
}

void {$prefix}{className}::NativePreConstruct()
{
	Super::NativePreConstruct();

    if (hxInst)
    {
        {$hxMainClass}_unreal_UserWidget_NativePreConstruct(hxInst);
    }
}

void {$prefix}{className}::NativeDestruct()
{
	Super::NativeDestruct();

    if (hxInst)
    {
        {$hxMainClass}_unreal_UserWidget_NativeDestruct(hxInst);
    }
}

void {$prefix}{className}::NativeTick(const FGeometry& MyGeometry, float InDeltaTime)
{
	Super::NativeTick(MyGeometry,InDeltaTime);

    if (hxInst)
    {
        {$hxMainClass}_unreal_UserWidget_NativeTick(hxInst,InDeltaTime);
    }
}

{$exposedMethods}