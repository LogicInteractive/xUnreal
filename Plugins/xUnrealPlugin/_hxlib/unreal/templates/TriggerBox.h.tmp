#pragma once

#include "CoreMinimal.h"
#include "UObject/ObjectMacros.h"
#include "GameFramework/Actor.h"
#include "Engine/TriggerBox.h"
#include <../_hxlib/xUnreal.h>
#include "{className}.generated.h"

{$head}

{$classDef}
class {$prefix}{className} : public {$prefix}{$superClass}
{
	GENERATED_BODY()

 public:
    {$prefix}{className}(const class FObjectInitializer& ObjectInitializer);
    ~{$prefix}{className}();
	virtual void BeginPlay() override;
	virtual void EndPlay(const EEndPlayReason::Type EndPlayReason) override;  
	virtual void Tick(float DeltaSeconds) override; 

	UFUNCTION()
	void OnOverlapBeginEvent(class AActor* OverlappedActor, class AActor* OtherActor);
	UFUNCTION()
	void OnOverlapEndEvent(class AActor* OverlappedActor, class AActor* OtherActor);

	void TriggerCurrentOverlaps();

{$exposedMethods}

private:
	HaxeObject hxInst;
};
